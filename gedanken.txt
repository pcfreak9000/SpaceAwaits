itemtools die in einem radius alles kaputt hauen????? aktuell gibts ja nur spezifisches entity und spezifisches tile...
was ist mit "silk touch" werkzeugen????? getItemDropped umgehen wird schwierig? + Random
+ nur sachen direkt vor einem abbauen? + kram in notizen


special hitbox bei verschiedenen tilesachen? also tileselector, und auch ob man dahinter was anklicken kann etc?
-> bounding box bei specialHitbox, selector passt sich der boundingbox an


raycasting überarbeiten??

> from mars to sirius


- öfen aufräumen?
- rezepte class / helper class?
- highlighter mit farben, je nach object, renderlayer, auch renderlayer des highlighters, verschiedene größen?
- aktivierungs und werkzeug rework
    - was ist mit silk-touch-werkzeugen?
    - justReleased
    - nur sachen vor einem falls frontlayer, mehr möglichkeitn, etc
    - activation layer stuff etc
    - kaputte werkzeuge replenishen etc
    - andere tasten für items?
    - mehrere ziele
- closing guioverlay when the tile is to far away
- inventory zeug, in der hand befindliches wenn man zu macht, die ganzen sonderfunktionen von slots
    - items die aufgenommen werden erst existierende stacks füllen
- renderdata (ITexture + Color?)    
    
- ore generation stuff (-> larger veins?)
- backlayer access, eg Ladder, allow breaking the backlayer tile???


    //Tile render modifikatoren -> tiles die besser mit nachbarn klarkommen und vlt noch mit großem gras und blumen over extenden oder andere texture??
    //random tick system, wahrscheinlichkeiten für entity ticking??
    //wasser + kleine hitboxen
    //terrain gen
    //STEINTYPEN!?? + textur?
    //baum animation, abreiß animation (-> klassen durchgucken die dinge nur bei gedrückt tun)



- rework simple crafting
    - inventar wo ingredients reingelegt werden, dann werden mögliche rezepte dafür angezeigt?
- wenn wasser etwas replaced, das tile droppen? + einstellungen bei tileliquid und replacetem tile?








   
- parallax effect?

Composer
render to framebuffer max 2048x2048, repeat until everything is collected
- wdith, height
- render(Camera) 

ComposedImage:
- Texture[][] textures, max 2048x2048?
- width, height

- render(...)
- renderTiled(...)

- parallax effect?




target fixed oder densityDiff >> 0 => diversion = 1
densityDiff = 0 => diversion = 0.5?
target unoccupied densityDiff << 0 => diversion = 0
